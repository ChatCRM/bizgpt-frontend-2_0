version: '3.9'
services:
  front:
    image: node:20-alpine
    command: sh -c "cd app && npm run start"
    volumes:
      - .:/app
    container_name: front-${PROJECT_NAME}
    restart: unless-stopped
    labels:
      - traefik.http.routers.front-${PROJECT_NAME}.rule=Host(`${SITE_URL}`)
      - "traefik.http.routers.front-${PROJECT_NAME}.tls=true"
      - "traefik.http.routers.front-${PROJECT_NAME}.tls.domains[0].main=${SITE_URL}"
      - "traefik.http.routers.front-${PROJECT_NAME}.tls.certresolver=myresolver"
    networks:
      - local-traefik-network
      
  nginx:
    image: nginx:1.23.0-alpine
    restart: unless-stopped
    volumes:
      - ./nginx/templates/default.conf.template.mixed:/etc/nginx/templates/default.conf.template:ro
      - ./.next/static:/_next/static
      - /var/lib/letsencrypt:/var/lib/letsencrypt:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    ports:
      # - 80:80
      - ${NGINX_PORT}:${NODE_PORT}
    env_file:
      - .env
    depends_on:
      - front
    container_name: nginx-${PROJECT_NAME}
    labels:
      - "traefik.http.routers.nginx-${PROJECT_NAME}.rule=(Host(`${SITE_URL}`) && PathPrefix(`/_next/static`))"
      - "traefik.http.routers.nginx-${PROJECT_NAME}.tls=true"
      - "traefik.http.routers.nginx-${PROJECT_NAME}.tls.domains[0].main=${SITE_URL}"
      - "traefik.http.routers.nginx-${PROJECT_NAME}.tls.certresolver=myresolver"
    networks:
      - local-traefik-network
      - network-1


networks:
  local-traefik-network:
    external: true
  network-1:
    external: false
